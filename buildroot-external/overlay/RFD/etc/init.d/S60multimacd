#!/bin/sh
# shellcheck shell=dash disable=SC2169 source=/dev/null
#
# Starts multimacd.
#

LOGLEVEL_RFD=5
CFG_TEMPLATE_DIR=/etc/config_templates
PIDFILE=/var/run/multimacd.pid

[[ -r /var/hm_mode ]] && . /var/hm_mode

# skip this startup if not in normal mode
[[ "${HM_MODE}" != "NORMAL" ]] && exit 0

init() {
  # make sure /var/etc/multimacd.conf contains the correct
  # coprocessor device path
  sed "s|^Coprocessor Device Path = /dev/.*$|Coprocessor Device Path = ${HM_HMRF_DEVNODE}|" ${CFG_TEMPLATE_DIR}/multimacd.conf >/var/etc/multimacd.conf

  # make sure /dev/eq3loop exists
  if [[ ! -c /dev/eq3loop ]]; then
    # load eq3_char_loop kernel module
    modprobe eq3_char_loop
    sleep 10 # wait for /dev/eq3loop to settle
  fi
}

waitStartupComplete() {
  STEPS=15
  for i in $(seq 1 ${STEPS}); do
    sleep 2
    echo -n "."
    MMDSTATUSPID=$(cat /var/status/multimacd.status 2>&1)
    MMDPID=$(pidof multimacd)
    if [[ "${MMDSTATUSPID}" == "${MMDPID}" ]]; then
      if [[ ! -c /dev/mmd_hmip ]] || [[ ! -c /dev/mmd_bidcos ]]; then
        echo -n "."
        # restart multimacd
        start-stop-daemon -K -q -p ${PIDFILE}
        sleep 2
        start-stop-daemon -S -N -15 -q -b -m -p ${PIDFILE} --exec /bin/multimacd -- -f /var/etc/multimacd.conf -l ${LOGLEVEL_RFD}
      else
        echo "OK"
        break
      fi
    fi
    if [[ ${i} -eq ${STEPS} ]]; then
      echo "ERROR"
    fi
  done
}

start() {
  echo -n "Starting multimacd: "

  # we only need multimacd+eq3loop if HMIP+HMRF is using the same device
  if [[ -n "${HM_HMIP_DEV}" ]] && [[ -n "${HM_HMRF_DEV}" ]] &&
     ( ( ! echo "${HM_HMIP_DEV}" | grep -q "HMIP-RFUSB" ) || [[ "${HM_HMRF_DEV}" != "HM-CFG-USB-2" ]] ); then

    # we need to check if the system has CONFIG_RT_GROUP_SCHED enabled
    # and enough cpu.rt_runtime_us shares assigned or otherwise
    # multimacd startup will fail as it uses sched_setscheduler() to
    # raise the real-time priority for processing things with low latency
    if [[ ! -e /sys/fs/cgroup/cpu/cpu.rt_runtime_us ]] ||
       [[ $(cat /sys/fs/cgroup/cpu/cpu.rt_runtime_us) -gt 0 ]]; then

      # run init function
      init

      # check if eq3loop is present
      if [[ -c /dev/eq3loop ]]; then
        # get the current syslog settings
        [[ -r /etc/config/syslog ]] && . /etc/config/syslog

        # adjust the oom score (which is inherited by start-stop-daemon)
        # to ensure that others are killed first in case of low memory situations
        echo -900 >/proc/$$/oom_score_adj 2>/dev/null

        # start multimacd with nice level -15 to increase
        # process priority
        start-stop-daemon -S -N -15 -q -b -m -p ${PIDFILE} --exec /bin/multimacd -- -f /var/etc/multimacd.conf -l ${LOGLEVEL_RFD}
        waitStartupComplete
      else
        echo "ERROR: /dev/eq3loop missing"
      fi
    else
      echo "ERROR: not enough real-time shares (cpu.rt_runtime_us == 0)"
    fi
  else
    echo "not required"
  fi
}

stop() {
  echo -n "Stopping multimacd: "
  if [[ -f "${PIDFILE}" ]]; then
    start-stop-daemon -K -q -p ${PIDFILE}
    rm -f ${PIDFILE}
    echo "OK"

    # make sure to unload eq3_char_loop which
    # is necessary for docker-based environments
    if [[ -c /dev/eq3loop ]]; then
      sleep 2 # wait to settle
      # load eq3_char_loop kernel module
      rmmod eq3_char_loop 2>/dev/null
    fi
  else
    echo "not started"
  fi
}

restart() {
  stop
  start
}

case "$1" in
  start)
    start
  ;;
  stop)
    stop
  ;;
  restart|reload)
    restart
  ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
esac

exit $?
